apiVersion: config.kommander.mesosphere.io/v1alpha1
kind: Installation
apps:
  centralized-grafana: null
  centralized-kubecost: null
  dex: null
  dex-k8s-authenticator: null
  fluent-bit: null
  gatekeeper: null
  grafana-logging: null
  grafana-loki: null
  karma: null
  karma-traefik: null
  kommander:
    values: |
      authorizedlister:
        image:
          tag: v2.1.1-amd64
      controller:
        containers:
          manager:
            image:
              tag: v2.1.1-amd64
      webhook:
        image:
          tag: v2.1.1-amd64
      fluxOperator:
        containers:
          manager:
            image:
              tag: v2.1.1-amd64
      kommander-licensing:
        controller:
          containers:
            manager:
              image:
                tag: v2.1.1-amd64
        webhook:
          image:
            tag: v2.1.1-amd64
      kubetools:
        image:
          tag: v2.1.1-amd64
  kube-prometheus-stack:
    values: |
      mesosphereResources:
        create: true
        rules:
          # addon alert rules are defaulted to false to prevent potential misfires if addons
          # are disabled.
          velero: false
        homeDashboard:
          cronJob:
            enabled: true
        hooks:
          grafana:
            secretKeyRef: dkp-credentials
      prometheus:
        additionalServiceMonitors:
          - name: dkp-service-monitor-metrics-dex-controller
            selector:
              matchLabels:
                servicemonitor.kommander.mesosphere.io/path: "metrics"
                kubeaddons.mesosphere.io/name: "dex-controller"
            namespaceSelector:
              any: true
            endpoints:
              - port: https
                interval: 30s
                scheme: https
                bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
                tlsConfig:
                  caFile: "/etc/prometheus/secrets/dex/ca.crt"
                  certFile: "/etc/prometheus/secrets/dex/tls.crt"
                  keyFile: "/etc/prometheus/secrets/dex/tls.key"
                  insecureSkipVerify: true
          - name: dkp-service-monitor-metrics-thanos
            selector:
              matchLabels:
                servicemonitor.kommander.mesosphere.io/path: "metrics"
            namespaceSelector:
              matchNames:
                - kommander
                - kubecost
            endpoints:
              # Service port for Thanos Querier, running in Kommander.
              # If we ever add a Kommander-specific Prometheus, this
              # endpoint should be removed and added to that Prometheus's
              # configuration.
              - targetPort: 10902
                interval: 30s
          - name: dkp-service-monitor-metrics-centralized-grafana
            selector:
              matchLabels:
                app.kubernetes.io/instance: "centralized-grafana"
                servicemonitor.kommander.mesosphere.io/path: "metrics"
            namespaceSelector:
              matchNames:
                - kommander
            endpoints:
              - port: service
                interval: 30s
          - name: dkp-service-monitor-metrics-kommander
            selector:
              matchLabels:
                servicemonitor.kommander.mesosphere.io/path: "metrics"
                kommander.mesosphere.io/name: "kommander"
            namespaceSelector:
              matchNames:
                - kommander
            endpoints:
              - port: https
                interval: 30s
                scheme: https
                bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
                tlsConfig:
                  insecureSkipVerify: true
          - name: dkp-service-monitor-karma
            selector:
              matchLabels:
                servicemonitor.kommander.mesosphere.io/path: "dkp__kommander__monitoring__karma__metrics"
            namespaceSelector:
              matchNames:
                - kommander
            endpoints:
              - path: /dkp/kommander/monitoring/karma/metrics
                targetPort: http
                interval: 30s
          # Below service monitors are copied from kube-prometheus-stack-d2iq-defaults
          # This is because arrays in values are replaced, not appended.
          - name: dkp-service-monitor-metrics
            selector:
              matchLabels:
                servicemonitor.kommander.mesosphere.io/path: "metrics"
            namespaceSelector:
              any: true
            endpoints:
              - port: metrics
                interval: 30s
              - port: monitoring
                interval: 30s
              # Service port for external-dns
              - targetPort: 7979
                interval: 30s
          - name: dkp-service-monitor-metrics-http
            selector:
              matchLabels:
                servicemonitor.kommander.mesosphere.io/path: "metrics"
                servicemonitor.kommander.mesosphere.io/port: "http"
            namespaceSelector:
              any: true
            endpoints:
              # Service ports for loki-distributed
              - targetPort: http
                interval: 30s
          - name: dkp-service-monitor-api-v1-metrics-prometheus
            selector:
              matchLabels:
                servicemonitor.kommander.mesosphere.io/path: "api__v1__metrics__prometheus"
            namespaceSelector:
              any: true
            endpoints:
              - path: /api/v1/metrics/prometheus
                port: metrics
                interval: 30s
          - name: dkp-service-monitor-api-v1-metrics-prometheus-http-10s
            selector:
              matchLabels:
                servicemonitor.kommander.mesosphere.io/path: "api__v1__metrics__prometheus"
                servicemonitor.kommander.mesosphere.io/port: "http"
                servicemonitor.kommander.mesosphere.io/interval: "10s"
            namespaceSelector:
              any: true
            endpoints:
              - path: /api/v1/metrics/prometheus
                port: http
                interval: 10s
          - name: dkp-service-monitor-prometheus-metrics
            selector:
              matchLabels:
                servicemonitor.kommander.mesosphere.io/path: "prometheus__metrics"
            namespaceSelector:
              any: true
            endpoints:
              - path: /_prometheus/metrics
                targetPort: 5601
                interval: 30s
        prometheusSpec:
          secrets:
            - dex
          storageSpec:
            volumeClaimTemplate:
              spec:
                # 100Gi is the default size for the chart
                resources:
                  requests:
                    storage: 100Gi
          resources:
            limits:
              cpu: 2000m
              memory: 10922Mi
            requests:
              cpu: 1000m
              memory: 4000Mi
      grafana:
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 300m
            memory: 100Mi
          requests:
            cpu: 200m
            memory: 100Mi
      alertmanager:
        alertmanagerSpec:
          resources:
            limits:
              cpu: 200m
              memory: 250Mi
            requests:
              cpu: 100m
              memory: 200Mi
  kubecost: null
  kubecost-thanos-traefik: null
  kubefed: null
  kubernetes-dashboard: null
  kubetunnel: null
  logging-operator: null
  minio-operator: null
  prometheus-adapter: null
  prometheus-thanos-traefik: null
  reloader: null
  thanos: null
  traefik: null 
  traefik-forward-auth-mgmt: null
  velero:
    values: |
      minioBackendConfiguration:
        service:
          annotations:
            "service.beta.kubernetes.io/aws-load-balancer-internal": "true"
ageEncryptionSecretName: sops-age
clusterHostname: ""
appManagementImageTag: v2.1.1-amd64
airgapped:
  enabled: true
  helmMirrorImageTag: v2.1.1-amd64
  helmMirrorImageRepository: "10.0.0.10:5000/mesosphere/kommander2-helm-mirror"
appManagementImageRepository: mesosphere/kommander2-appmanagement
kommanderChartsVersion: v2.1.1